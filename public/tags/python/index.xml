<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on AgilePhD</title>
    <link>http://localhost:1313/tags/python/</link>
    <description>Recent content in Python on AgilePhD</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jul 2024 20:32:38 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elastic Beanstalk Healthcheck with a Django App</title>
      <link>http://localhost:1313/posts/django_eb_healcheck/</link>
      <pubDate>Wed, 10 Jul 2024 20:32:38 -0500</pubDate>
      <guid>http://localhost:1313/posts/django_eb_healcheck/</guid>
      <description>The Problem Elastic Beanstalk (EB) is an orchestration service offered by AWS for deploying web applications. The good think about EB is that it handles much of the setup for you. The bad thing is that EB also includes services, such as Healthchecks, that do not work for a Django app without additional setup.&#xA;Although my app was deployed and appeared to be working correctly, the Elastic Beanstalk environment reported Severe/Degraded state.</description>
    </item>
    <item>
      <title>Asymmetric Cryptography with Python</title>
      <link>http://localhost:1313/posts/asymmetric_cryptography/</link>
      <pubDate>Fri, 22 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/asymmetric_cryptography/</guid>
      <description>RSA (Rivest-Shamir-Adleman) Cryptography RSA cryptography, named after its inventors Ron Rivest, Adi Shamir, and Leonard Adleman, is a widely used asymmetric encryption algorithm. It is a fundamental tool in modern cryptography and is used for secure data transmission, digital signatures, and various other cryptographic applications. RSA relies on the mathematical properties of prime numbers for its security.&#xA;Here&amp;rsquo;s a simplified explanation of how RSA cryptography works:&#xA;Key Generation: The first step is to generate a pair of keys: a public key and a private key.</description>
    </item>
    <item>
      <title>Hashing</title>
      <link>http://localhost:1313/posts/hashing/</link>
      <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hashing/</guid>
      <description>This post will discuss the concept of hashing and provide examples using the Python programming language.&#xA;The Hash A hash refers to a mathematical function that takes some type of information as input and returns an encrypted output with a fixed length. This output, or hash, is unique to the information used as the input. You can think of it as being like a fingerprint.&#xA;SHA256 is a popular cryptographic hash algorithm that produces a 256-bit hash value.</description>
    </item>
  </channel>
</rss>
