<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python on AgilePhD</title>
    <link>http://localhost:1313/tags/python/</link>
    <description>Recent content in Python on AgilePhD</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Wed, 10 Jul 2024 20:32:38 -0500</lastBuildDate>
    <atom:link href="http://localhost:1313/tags/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Elastic Beanstalk Healthcheck with a Django App</title>
      <link>http://localhost:1313/posts/django_eb_healcheck/</link>
      <pubDate>Wed, 10 Jul 2024 20:32:38 -0500</pubDate>
      <guid>http://localhost:1313/posts/django_eb_healcheck/</guid>
      <description>The Problem Elastic Beanstalk (EB) is an orchestration service offered by AWS for deploying web applications. The good thing about EB is that it handles much of the setup for you. The bad thing is that EB also includes services, such as Healthchecks, that do not work for a Django app without additional setup.&#xA;Although my app was deployed and appeared to be working correctly, the Elastic Beanstalk environment reported Severe/Degraded state.</description>
    </item>
    <item>
      <title>Asymmetric Cryptography with Python</title>
      <link>http://localhost:1313/posts/asymmetric_cryptography/</link>
      <pubDate>Fri, 22 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/asymmetric_cryptography/</guid>
      <description>RSA (Rivest-Shamir-Adleman) Cryptography RSA cryptography, named after its inventors Ron Rivest, Adi Shamir, and Leonard Adleman, is a widely used asymmetric encryption algorithm. It is a fundamental tool in modern cryptography and is used for secure data transmission, digital signatures, and various other cryptographic applications. RSA relies on the mathematical properties of prime numbers for its security.&#xA;Here&amp;rsquo;s a simplified explanation of how RSA cryptography works:&#xA;Key Generation: The first step is to generate a pair of keys: a public key and a private key.</description>
    </item>
    <item>
      <title>Hashing</title>
      <link>http://localhost:1313/posts/hashing/</link>
      <pubDate>Thu, 21 Mar 2024 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/hashing/</guid>
      <description>This post will discuss the concept of hashing and provide examples using the Python programming language.&#xA;The Hash A hash refers to a mathematical function that takes some type of information as input and returns an encrypted output with a fixed length. This output, or hash, is unique to the information used as the input. You can think of it as being like a fingerprint.&#xA;SHA256 is a popular cryptographic hash algorithm that produces a 256-bit hash value.</description>
    </item>
    <item>
      <title>Dates and Times and Strings, Oh My!</title>
      <link>http://localhost:1313/posts/python_datetime/</link>
      <pubDate>Wed, 23 Oct 2019 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/python_datetime/</guid>
      <description>Working with dates &amp;amp; times can be frustrating. Many systems that you may encounter require various formatting for the datetime object. Luckily, Python is really good at handling this.&#xA;Lions and tigers and bears, oh my!&#xA;datetime Python has a module called datetime for working with date and time objects.&#xA;import datetime now = datetime.datetime.now() print(type(now)) print(&amp;#34;Current datetime = &amp;#34;, now) today = datetime.datetime.now().date() print(type(today)) print(&amp;#34;Current date = &amp;#34;, today) current_time = datetime.</description>
    </item>
    <item>
      <title>Python Files</title>
      <link>http://localhost:1313/posts/python_files/</link>
      <pubDate>Fri, 23 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/python_files/</guid>
      <description>In many situations, we will need to work with larger sets of data. Python easily allows for reading from and writing to files.&#xA;The open() method returns a file object, and is most commonly used with two arguments: open(filename, mode).&#xA;The first argument is a string containing the filename. The second argument is another string containing a few characters describing the way in which the file will be used. mode can be &#39;r&#39; when the file will only be read, &#39;w&#39; for only writing, and &#39;a&#39; opens the file for appending; any data written to the file is automatically added to the end.</description>
    </item>
    <item>
      <title>Python Dictionary</title>
      <link>http://localhost:1313/posts/python_dictionary/</link>
      <pubDate>Thu, 22 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/python_dictionary/</guid>
      <description>A dictionary is a collection which is unordered, changeable and indexed.&#xA;Dictionary structure A dictionary, or dict, organizes data values by association with other data values rather than by sequential position. A dictionary is a collection which is unordered, changeable and indexed. In Python dictionaries are written with curly brackets, and they have keys and values. Dictionaries are initialized using curly braces { }.&#xA;&amp;gt;&amp;gt;&amp;gt; capitals = {&amp;#39;United States&amp;#39;: &amp;#39;Washington, DC&amp;#39;,&amp;#39;France&amp;#39;: &amp;#39;Paris&amp;#39;,&amp;#39;Italy&amp;#39;: &amp;#39;Rome&amp;#39;} &amp;gt;&amp;gt;&amp;gt; capitals {&amp;#39;United States&amp;#39;: &amp;#39;Washington, DC&amp;#39;, &amp;#39;France&amp;#39;: &amp;#39;Paris&amp;#39;, &amp;#39;Italy&amp;#39;: &amp;#39;Rome&amp;#39;} &amp;gt;&amp;gt;&amp;gt; type(capitals) &amp;lt;class &amp;#39;dict&amp;#39;&amp;gt; &amp;gt;&amp;gt;&amp;gt; capitals[&amp;#39;Italy&amp;#39;] &amp;#39;Rome&amp;#39; &amp;gt;&amp;gt;&amp;gt; capitals[&amp;#39;Spain&amp;#39;] = &amp;#39;Madrid&amp;#39; &amp;gt;&amp;gt;&amp;gt; capitals {&amp;#39;United States&amp;#39;: &amp;#39;Washington, DC&amp;#39;, &amp;#39;France&amp;#39;: &amp;#39;Paris&amp;#39;, &amp;#39;Italy&amp;#39;: &amp;#39;Rome&amp;#39;, &amp;#39;Spain&amp;#39;: &amp;#39;Madrid&amp;#39;} &amp;gt;&amp;gt;&amp;gt; &amp;#39;Germany&amp;#39; in capitals False &amp;gt;&amp;gt;&amp;gt; &amp;#39;Italy&amp;#39; in capitals True &amp;gt;&amp;gt;&amp;gt; morecapitals = {&amp;#39;Germany&amp;#39;: &amp;#39;Berlin&amp;#39;,&amp;#39;United Kingdom&amp;#39;: &amp;#39;London&amp;#39;} &amp;gt;&amp;gt;&amp;gt; capitals.</description>
    </item>
    <item>
      <title>Python Lists</title>
      <link>http://localhost:1313/posts/python_lists/</link>
      <pubDate>Wed, 21 Mar 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/python_lists/</guid>
      <description>In Python, a list is a sequence of data values called items or elements. An item can be of any type.&#xA;A Python list is similar to a list you would make in the real-world:&#xA;shopping list to-do list roster for a team guest list for a party List structure The logical structure of a list resembles the structure of a string. Items in a list are ordered by position. Each list item has a unique index specifying its position.</description>
    </item>
    <item>
      <title>Sprint Zero for a Data Scientist</title>
      <link>http://localhost:1313/posts/sprint_zero/</link>
      <pubDate>Wed, 21 Feb 2018 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/posts/sprint_zero/</guid>
      <description>In agile software development frameworks, such as Scrum, development is conducted in time-boxed work iterations called Sprints. Sprint Zero is all the work that needs to happen before you can start actually development1.&#xA;Python versions Technology is constantly changing. That the great thing about our industry and the frustrating thing about our industry. In Python, there was a bit of a riff when the language went from version 2.x to 3.</description>
    </item>
  </channel>
</rss>
